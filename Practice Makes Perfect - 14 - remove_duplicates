# Write a function remove_duplicates that takes in a list and removes elements of the list that are the same.
# For example: remove_duplicates([1,1,2,2]) should return [1,2].

# Don't remove every occurrence, since you need to keep a single occurrence of a number.
# The order in which you present your output does not matter. So returning [1,2,3] is the same as returning [3,1,2].
# Do not modify the list you take as input! Instead, return a new list.

# The easiest way to approach this problem is to create a new list in your function, loop through your input list, and add items from 
# your input list to your new list if the current item is not already contained in your new list. Using the a not in b syntax might help 
# you here.

# Also, note that destructively modifying a list while you are looping through it is bad practice and will likely lead to bugs somewhere 
# down the line! That's why we always make a fresh copy to work on.

def remove_duplicates(number_list):
    no_dupes = [] # create an empty list
    for number in number_list: # go through each number in our original list
        if number not in no_dupes: # if the number is not already in our dupe'less list, add it to the dupe'less list
            no_dupes.append(number)
    return no_dupes

print remove_duplicates([1, 1, 2, 2]) # returns [1, 2]
